name: CI
# test
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/
    
    strategy:
      matrix:
        go: [ "1.17", "1.18", "1.19" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
  
  build-react:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./frontend/

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js ${{ matrix.node-version }} environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Yarn install, build and test
        run: |
          yarn install --frozen-lockfile
          yarn run build --if-present
          yarn run test
      
#   opensource-security:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@master
#       - uses: snyk/actions/setup@master
    
#       - name: Set up Go 1.18
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.18
#           working-directory: ./backend/
          
#       - name: Set up Node.js 18.x
#         uses: actions/setup-node@v3.4.1
#         with:
#           node-version: 18.x
#           working-directory: ./frontend/
  
#       - name: Run Snyk to check for vulnerabilities
#         run: snyk test --all-projects --detection-depth=99 --target-dir ./backend/ --target-dir ./frontend/
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  code-security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
